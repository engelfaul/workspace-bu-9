/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
			
		--Mantener el CorrelId
		CALL CopyMessageHeaders();
				
		--Referencia al mensaje de entrada
		DECLARE refMsgIn				REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refBodyIn				REFERENCE TO refMsgIn.Body;
									
		--Referencia a Variables del Environment
		CREATE FIELD Environment.Variables;
		DECLARE refEnvVar				REFERENCE TO Environment.Variables;
		
		DECLARE refEndpointElem REFERENCE TO refMsgIn;
		MOVE refEndpointElem FIRSTCHILD NAMESPACE*;
		
		--Referencias al contenedor Ãºtil
		DECLARE refEndpointElementM      REFERENCE TO refBodyIn.*:NitOrigen;
		DECLARE refEndpointRequest REFERENCE TO refEndpointElementM.Request;
		DECLARE refEndpointDataHeader REFERENCE TO refEndpointRequest.DataHeader;
		
		CREATE FIELD OutputRoot.XMLNSC;
		DECLARE refOut 			REFERENCE TO OutputRoot.XMLNSC;
		
		--Guardan valores reutilizables del envolvente esbXML
		SET	refEnvVar.Header    = refMsgIn.Header; 
		
		SET	refEnvVar.NameSpace = FIELDNAMESPACE (refEndpointElementM);
		SET refEnvVar.nombreOperacion = refEndpointDataHeader.nombreOperacion;
		SET refEnvVar.total = refEndpointDataHeader.total;
		
		--Guardar en environment el valor del consecutivo
		SET refEnvVar.consecutivo = getConsecutive(refMsgIn.Header);

		--Indicar propiedad del Message Set
		SET OutputRoot.Properties.MessageSet = NMessageSet;
					
		--Armar mensaje de salida sin namespace
		SET refOut = refBodyIn;		
		CALL RemoveNamespace (refOut, FIELDVALUE(refEnvVar.NameSpace));
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
