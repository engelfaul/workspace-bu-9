CREATE COMPUTE MODULE RemoveEnvelope
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Mantener el CorrelId
		CALL CopyMessageHeaders();
				
		--Referencia al mensaje de entrada
		DECLARE refMsgIn				REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn				REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn				REFERENCE TO refMsgIn.Body;
		
		--Referencia al contenedor de la carga Ãºtil
        DECLARE refEndpointElem	REFERENCE TO refBodyIn;
		MOVE refEndpointElem FIRSTCHILD NAMESPACE *;
		
		DECLARE refDataHeaderIn 		REFERENCE TO refEndpointElem.Request.DataHeader;
		
		--Referencia a Variables del Environment
		CREATE FIELD Environment.Variables;
		DECLARE refEnvVar				REFERENCE TO Environment.Variables;
		
		--Transportar el Header de la envoltura esbXML		
		SET refEnvVar.Header = refHeaderIn;
				
		--Guardar en Environment para uso en la respuesta
		SET refEnvVar.NameSpace			= FIELDNAMESPACE(refEndpointElem);
		SET refEnvVar.nombreOperacion	= refDataHeaderIn.nombreOperacion;
		SET refEnvVar.total				= refDataHeaderIn.total;
		SET refEnvVar.idTransaccion		= refDataHeaderIn.idTransaccion;
		
		CREATE FIELD OutputRoot.XMLNSC;
		DECLARE refOut 					REFERENCE TO OutputRoot.XMLNSC;
		
		--Indicar propiedad del Message Set
		SET OutputRoot.Properties.MessageSet = NMessageSet;
					
		--Armar mensaje de salida sin namespace
		SET refOut = refBodyIn;		
		CALL RemoveNamespace (refOut, FIELDVALUE(refEnvVar.NameSpace));
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;