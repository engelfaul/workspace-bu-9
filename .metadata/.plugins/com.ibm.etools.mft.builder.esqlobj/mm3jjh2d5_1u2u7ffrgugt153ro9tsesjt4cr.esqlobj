/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- Mantener el CorrelId
		CALL CopyMessageHeaders();
		
		--Referencia al Header y Body del mensaje entrante
		DECLARE refMsgIn		REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn     REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn			REFERENCE TO refMsgIn.Body;
		DECLARE refRespIn			REFERENCE TO refBodyIn.TACSN_RESP.Header;

		--Referencia al OutputLocalEnvironment
		DECLARE refLocEnv		REFERENCE TO OutputLocalEnvironment;
					
		--Referencia al Environment
		DECLARE refEnvVar REFERENCE TO Environment.Variables;
		
		--Declaración de variables
		DECLARE nameSpaceResp			CHARACTER FIELDVALUE(refEnvVar.NameSpace);
		
		--Crear mensaje de salida
        CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML;
        DECLARE refMsgOut           REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML;

        --Crear Header de salida
        CREATE FIELD refMsgOut.Header;
        DECLARE refHeaderOut        REFERENCE TO refMsgOut.Header;
        
        --Declaración de variables
		DECLARE codigoError		CHARACTER TRIM(FIELDVALUE(refRespIn.codigoError));
		DECLARE mensajeError	CHARACTER TRIM(FIELDVALUE(refRespIn.mensajeError));
		
		--Transportar el Header de la envoltura esbXML
		SET refHeaderOut = refHeaderIn;
		
		 --Garantizar que se envía un messageId
        IF refHeaderIn.messageId IS NULL OR FIELDVALUE(refHeaderIn.messageId) = VACIO THEN
            SET refHeaderOut.messageId = InputRoot.MQMD.CorrelId; 
        ELSE 
            SET refHeaderOut.messageId = refHeaderIn.messageId; 
        END IF;
        
        --Declaración referencia al statusReference de la metadata
		CREATE FIELD refHeaderOut.responseData.status;
		DECLARE statusReference	REFERENCE TO refHeaderOut.responseData.status;		
		
		--Mapeo del error para el HandleError
		SET statusReference.statusCode							= BUSINESS_EXCEPTION; 
		SET statusReference.businessException.businessCode		= codigoError;				
		SET statusReference.businessException.businessMessage	= mensajeError;
		
		--Propagar mensaje al HandleError
		PROPAGATE TO TERMINAL 'out1' MESSAGE OutputRoot DELETE NONE;
		
		--Crear campo y referencia Body de salida
		CREATE FIELD refMsgOut.Body;
		DECLARE refBodyOut		REFERENCE TO refMsgOut.Body;	
		
		CREATE FIELD refBodyOut.V1_Autenticacion:mjsResCerrarSesion;
        DECLARE refFirstTagOut												REFERENCE TO refBodyOut.V1_Autenticacion:mjsResCerrarSesion;
        
        --Declarar prefijos de carga útil
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v1 					= V1_Autenticacion;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v11 					= v11Res;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v12 					= v12Res;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v13 					= v13Res;
        
        CREATE FIELD refFirstTagOut.V1_Autenticacion:contextoRespuesta;
        DECLARE refContextoRespuesta 										REFERENCE TO refFirstTagOut.V1_Autenticacion:contextoRespuesta;
        
        CREATE FIELD refContextoRespuesta.v11Res:resultadoTransaccion;
        DECLARE refResultadoTrans											REFERENCE TO refContextoRespuesta.v11Res:resultadoTransaccion;
        
        CREATE FIELD refContextoRespuesta.v11Res:error;
        DECLARE refError													REFERENCE TO refContextoRespuesta.v11Res:error;
        
      --  CREATE FIELD refFirstTagOut.V1_Autenticacion:seguridadTokenTipo;
        
        --Mapeos de los campos
        SET refResultadoTrans.v12Res:valCaracterAceptacion 					= 'M';        
        SET refError.v13Res:codMsjRespuesta									= TRIM(refRespIn.codigoError);
        SET refError.v13Res:valMsjRespuesta									= TRIM(refRespIn.mensajeError);
       
        
		--Setear la cola de salida
		CALL SetDestinationListHd(refHeaderOut, refLocEnv);
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
