/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- Mantener el CorrelId
		CALL CopyMessageHeaders();
		
		--Referencia al Header y Body del mensaje entrante
		DECLARE refMsgIn		    REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn         REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn			REFERENCE TO refMsgIn.Body;
		DECLARE refRespIn			REFERENCE TO refBodyIn.TCUYC_RESP.Header;

		--Referencia al OutputLocalEnvironment
		DECLARE refLocEnv		    REFERENCE TO OutputLocalEnvironment;
				
		--Referencia al Environment
		DECLARE refEnvVar           REFERENCE TO Environment.Variables;
		
		--Crear mensaje de salida
		CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML;
		DECLARE refMsgOut		REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML;
		
		--Crear campo y referencia Header de salida.
		CREATE FIELD refMsgOut.Header;
		DECLARE refHeaderOut	REFERENCE TO refMsgOut.Header;
		
		--Crear campo y referencia Body de salida
		CREATE FIELD refMsgOut.Body;
		DECLARE refBodyOut		REFERENCE TO refMsgOut.Body;
		
		 --Garantizar que se envía un messageId
        IF refHeaderIn.messageId IS NULL OR FIELDVALUE(refHeaderIn.messageId) = VACIO THEN
            SET refHeaderOut.messageId = InputRoot.MQMD.CorrelId; 
        ELSE 
            SET refHeaderOut.messageId = refHeaderIn.messageId; 
        END IF;
        
		--Referencia al namespace
		DECLARE nameSpaceResp		CHARACTER refEnvVar.NameSpace;
        -- crear response
		CREATE FIELD refBodyOut.{nameSpaceResp}:CambioUsuarioYClaveResponse;
		DECLARE refFirstTagOut	REFERENCE TO refBodyOut.{nameSpaceResp}:CambioUsuarioYClaveResponse;
		
		-- Declarar prefijo de la carga útil
		SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:cam = nameSpaceResp;
		
		-- Crear los tag contenedores de respuesta
        CREATE FIELD refFirstTagOut.DataHeader;
        DECLARE refDataHeaderOut 									REFERENCE TO refFirstTagOut.DataHeader;
        
        CREATE FIELD refFirstTagOut.Data;
        DECLARE refDataOut											REFERENCE TO refFirstTagOut.Data;
       
      							
		--Transportar el Header de la envoltura esbXML
		SET refHeaderOut = refHeaderIn;
		
		--Mapeos de salida
		SET refDataHeaderOut.nombreOperacion	   = TRIM(CAST(FIELDVALUE(refEnvVar.nombreOperacion) AS CHARACTER));
		SET refDataHeaderOut.total		  		   = TRIM(FIELDVALUE(refEnvVar.total));
		SET refDataHeaderOut.caracterAceptacion    = 'B';
		SET refDataHeaderOut.ultimoMensaje		   = TRIM(CAST(FIELDVALUE(refRespIn.flagFinBloque) AS CHARACTER));
		SET refDataHeaderOut.idTransaccion         = TRIM(CAST(FIELDVALUE(refEnvVar.idTransaccion) AS CHARACTER));	
		SET refDataHeaderOut.codMsgRespuesta   	   = TRIM(CAST(FIELDVALUE(refRespIn.codigoError) AS CHARACTER));
		SET refDataOut.codMsjRespuestaBackend	   = ZERO;
		SET refDataOut.valMsjRespuestaBackend	   = 'OK';
		
		--Llamado a la función que setea en el localEnvironment la cola de respuesta
		CALL SetDestinationListHd(refHeaderOut, refLocEnv);
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
