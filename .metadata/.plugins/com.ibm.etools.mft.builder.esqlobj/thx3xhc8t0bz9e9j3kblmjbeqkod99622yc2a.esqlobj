/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN

		-- Mantener el CorrelId
		CALL CopyMessageHeaders();
		
		--Referencia al Header y Body del mensaje entrante
		DECLARE refMsgIn		    REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn         REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn			REFERENCE TO refMsgIn.Body;
		DECLARE refRespHeaderIn		REFERENCE TO refBodyIn.TCDCT_RESP.Header;
		DECLARE refRespBodyIn		REFERENCE TO refBodyIn.TCDCT_RESP.Body		;

		--Referencia al OutputLocalEnvironment
		DECLARE refLocEnv		    REFERENCE TO OutputLocalEnvironment;
				
		--Referencia al Environment
		DECLARE refEnvVar           REFERENCE TO Environment.Variables;
		
		--Declaración de variables
		DECLARE nameSpaceResp			CHARACTER FIELDVALUE(refEnvVar.NameSpace);
		
		--Crear mensaje de salida
		CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML;
		DECLARE refMsgOut		REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML;
		
		--Crear campo y referencia Header de salida.
		CREATE FIELD refMsgOut.Header;
		DECLARE refHeaderOut	REFERENCE TO refMsgOut.Header;
		
		--Crear campo y referencia Body de salida
		CREATE FIELD refMsgOut.Body;
		DECLARE refBodyOut		REFERENCE TO refMsgOut.Body;
		
		 --Garantizar que se envía un messageId
        IF refHeaderIn.messageId IS NULL OR FIELDVALUE(refHeaderIn.messageId) = VACIO THEN
            SET refHeaderOut.messageId = InputRoot.MQMD.CorrelId; 
        ELSE 
            SET refHeaderOut.messageId = refHeaderIn.messageId; 
        END IF;

        -- crear response
		CREATE FIELD refBodyOut.{nameSpaceResp}:ConsultaDatosCuentaResponse;
		DECLARE refFirstTagOut		REFERENCE TO refBodyOut.{nameSpaceResp}:ConsultaDatosCuentaResponse;
        
		--Declarar prefijo de la carga útil
		SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:con = nameSpaceResp;
		
		--Crear campo y referencai al return de salida
		CREATE FIELD refFirstTagOut.Response;	
		DECLARE refReturnOut REFERENCE TO refFirstTagOut.Response;
		
		--Crear campo y referencia al DataHeader de salida
		CREATE FIELD refReturnOut.DataHeader;	
		DECLARE refDataHeaderOut REFERENCE TO refReturnOut.DataHeader;
		
		--Crear campo y referencai al Data de salida
		CREATE FIELD refReturnOut.Data;	
		DECLARE refDataOut REFERENCE TO refReturnOut.Data;
								
		--Transportar el Header de la envoltura esbXML
		SET refHeaderOut = refHeaderIn;
				
		--Mapeo de la metadata en escenario exitoso
		SET refHeaderOut.responseData.status.statusCode = SUCCESS;
		
		--Mapeos de salida
		
		SET refDataHeaderOut.nombreOperacion      						 = refEnvVar.nombreOperacion;
		SET refDataHeaderOut.total                						 = refEnvVar.total;
		SET refDataHeaderOut.caracterAceptacion    						 = 'B';
		SET refDataHeaderOut.ultimoMensaje         						 = CAST(refRespHeaderIn.flagFinBloque AS INTEGER);
		SET refDataHeaderOut.idTransaccion         						 = refEnvVar.idTransaccion;
		SET refDataHeaderOut.codMsgRespuesta       						 = CAST(refRespHeaderIn.codigoError AS INTEGER);
				
		
		SET refDataOut.Registros.Registro.valNumeroProducto       		 = TRIM(refRespBodyIn.valNumeroProducto);
		SET refDataOut.Registros.Registro.valMonedaOrigenProducto		 = TRIM(refRespBodyIn.valMonedaOrigenProducto);
		SET refDataOut.Registros.Registro.valNombre         	  	     = TRIM(refRespBodyIn.valNombre);
	  	SET refDataOut.Registros.Registro.codProducto      		  		 = CAST(getBusReg_HomologTipoProdPA(refRespBodyIn.codProducto, BR_PA_TPI)AS INTEGER);--'560';
		SET refDataOut.Registros.Registro.codSubProducto       	  		 = CAST(refRespBodyIn.codSubProducto AS CHARACTER);
		SET refDataOut.Registros.Registro.valDesProducto       	  		 = TRIM(refRespBodyIn.valDesProducto);
		

		--Setear la cola de salida
		CALL SetDestinationListHd(refHeaderOut, refLocEnv);
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
