CREATE COMPUTE MODULE ProcessErrorMessageStoredProcedureExecute
	
	DECLARE InputMessage 	REFERENCE TO InputRoot.XMLNSC;
	DECLARE InputHeader		REFERENCE TO InputMessage.esbXML:esbXML.Header;
	DECLARE InputBody		REFERENCE TO InputMessage.esbXML:esbXML.Body;
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		-- mantener correlid
		CALL CopyMessageHeaders();
		
		-- declaración variables de descripción error
		DECLARE messageText 			CHARACTER '';
		DECLARE parentName 				CHARACTER '';
		DECLARE catlgName 				CHARACTER '';
		DECLARE errorText 				CHARACTER '';
		DECLARE messageNumber 			INTEGER 0;
		
		-- obtener mensaje de error
		CALL com.davivienda.utils.getLastExceptionDetail(InputExceptionList,messageNumber,
													messageText, parentName, catlgName);
		
		-- construcción del mensaje de salida
		DECLARE OutputMessage REFERENCE TO OutputRoot.XMLNSC;
		
		CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML.Header;
		DECLARE OutputHeader REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML.Header;
		
		SET OutputHeader = Environment.Variables.MsgRequest.Header; 
		
		-- construcción status para notificar la excepción de proveedor
		CREATE FIELD OutputHeader.responseData.status;
		SET OutputHeader.responseData.status.statusCode = PROVEXCEPTION;
	
		CREATE FIELD OutputHeader.responseData.status.providerException;
		DECLARE proException REFERENCE TO OutputHeader.responseData.status.providerException;
		
		SET proException.providerCode = ProviderCode;
		SET proException.providerMessage = ProviderDescription;
		SET proException.providerLocation = 'ADP.INT.RPG.EXECUTE.' || faultactor;
		SET proException.providerDetail = InputExceptionList; 
		
		PROPAGATE TO TERMINAL 'out1' MESSAGE OutputRoot DELETE NONE;
	
		-- construcción del mensaje de excepción
		CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML.Body;
		DECLARE OutputBody		REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML.Body;
		
		CALL BuildMessageException (OutputBody, ProviderCode, ProviderDescription);
		
		-- enrutar la respuesta al componente de servicio que invocó al adaptador
		CREATE FIELD OutputLocalEnvironment.Destination.MQDestinationList;
		DECLARE destination REFERENCE TO OutputLocalEnvironment.Destination.MQDestinationList;
		
		SET destination.DestinationData[1].queueName =  OutputHeader.internalRoutingData.replyToQueue.queueName;
		SET destination.DestinationData[1].queueManagerName =  OutputHeader.internalRoutingData.replyToQueue.queueManagerName;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;