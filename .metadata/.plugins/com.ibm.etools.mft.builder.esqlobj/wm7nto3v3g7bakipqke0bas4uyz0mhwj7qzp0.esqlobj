CREATE COMPUTE MODULE BuildTraceBckEndMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Copiar cabeceras del mensaje
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.Properties = InputRoot.Properties;
		
		DECLARE esbxmlin REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		-- referencia al header de entrada
		DECLARE headerin REFERENCE TO headerin;
		IF FIELDNAME (esbxmlin.Header) <> 'Header' THEN
			MOVE headerin TO esbxmlin.Header;
		END IF;		
		
		IF CAST(Environment.Variables.Traceable AS BOOLEAN) THEN
			-- construcci√≥n de mensaje de log
			CREATE FIELD OutputRoot.XMLNSC.LogHandlerMsgSet;
			
			SET OutputRoot.XMLNSC.LogHandlerMsgSet.systemId			= COALESCE(headerin.systemId,Environment.Variables.Canal,'');
			SET OutputRoot.XMLNSC.LogHandlerMsgSet.messageId		= COALESCE(headerin.messageId,Environment.Variables.messageId,InputRoot.MQMD.CorrelId);
			SET OutputRoot.XMLNSC.LogHandlerMsgSet.componentId 		= traceabilityPoint;
			SET OutputRoot.XMLNSC.LogHandlerMsgSet.timeStamp	 	= CURRENT_TIMESTAMP;
			SET OutputRoot.XMLNSC.LogHandlerMsgSet.serviceId	 	= COALESCE(Environment.Variables.ServiceId,headerin.requestData.endpointReference.serviceId,'');
		
			RETURN TRUE;
			
		END IF;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;