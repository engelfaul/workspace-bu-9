/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
			
		--Mantener el CorrelId
		CALL CopyMessageHeaders();				
          				
		--Referencia al mensaje de entrada
		DECLARE refMsgIn				REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refBodyIn				REFERENCE TO refMsgIn.Body;
									
		DECLARE refEndpointElem	REFERENCE TO refBodyIn.*:ConsultaSaldosCliente;
		DECLARE refRequestIn			REFERENCE TO refEndpointElem.Request;
		DECLARE refDataHeaderIn			REFERENCE TO refEndpointElem.Request.DataHeader;
		DECLARE refDataIn				REFERENCE TO refEndpointElem.Request.Data;
		
		--Referencia a Variables del Environment
		CREATE FIELD Environment.Variables;
		DECLARE refEnvVar				REFERENCE TO Environment.Variables;
			
		--Se guarda el NameSpace en el Environment
		SET refEnvVar.NameSpace			= FIELDNAMESPACE(refEndpointElem);
		SET refEnvVar.nombreOperacion   = refDataHeaderIn.nombreOperacion;
		SET refEnvVar.idTransaccion     = refDataHeaderIn.idTransaccion;
		SET refEnvVar.total				= refDataHeaderIn.total;
		SET refEnvVar.tipoId			= refDataIn.tipoId;
		

			
		CREATE FIELD OutputRoot.XMLNSC;
		DECLARE refOut 					REFERENCE TO OutputRoot.XMLNSC;
			
			
		-- Guardar Header del envolvente esbXML
		SET refEnvVar.Header = refMsgIn.Header;
		
		--Indicar propiedad del Message Set
		SET OutputRoot.Properties.MessageSet = NMessageSet;
		
		--Setear cola de replytoqueue 
		SET OutputRoot.XMLNSC.esbXML:esbXML.Header.internalRoutingData.replyToQueue.queueName = UDPreplyToQ;		
		
		--Armar mensaje de salida sin namespace
		SET refOut = refBodyIn;		
		CALL RemoveNamespace (refOut, FIELDVALUE(refEnvVar.NameSpace));
	
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
