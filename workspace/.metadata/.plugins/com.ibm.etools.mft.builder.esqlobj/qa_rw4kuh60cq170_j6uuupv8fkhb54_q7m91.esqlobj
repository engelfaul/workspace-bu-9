CREATE COMPUTE MODULE ApplyResponseTransformation_AVTO
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- Mantener el CorrelId
		CALL CopyMessageHeaders();
		
		--Referencia al Header y Body del mensaje entrante
		DECLARE refMsgIn		    			REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn         			REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn						REFERENCE TO refMsgIn.Body;
		DECLARE refRespIn						REFERENCE TO refBodyIn.TAVTO_RESP;
		

		--Referencia al OutputLocalEnvironment
		DECLARE refLocEnv		    			REFERENCE TO OutputLocalEnvironment;
					
		--Referencia al Environment
		DECLARE refEnvVar           			REFERENCE TO Environment.Variables;
		
		--Crear mensaje de salida
		CREATE FIELD OutputRoot.XMLNSC.esbXML:esbXML;
		DECLARE refMsgOut						REFERENCE TO OutputRoot.XMLNSC.esbXML:esbXML;
		
		--Crear campo y referencia Header de salida.
		CREATE FIELD refMsgOut.Header;
		DECLARE refHeaderOut					REFERENCE TO refMsgOut.Header;
		
		--Crear campo y referencia Body de salida
		CREATE FIELD refMsgOut.Body;
		DECLARE refBodyOut						REFERENCE TO refMsgOut.Body;
		
		SET refHeaderOut 						= refHeaderIn;
		
		DECLARE refDataHeaderIn 				REFERENCE TO refRespIn.Header;
        DECLARE refDataIn 						REFERENCE TO refRespIn.Body;											
		
		 --Garantizar que se envía un messageId
        IF refHeaderIn.messageId IS NULL OR FIELDVALUE(refHeaderIn.messageId) = VACIO THEN
            SET refHeaderOut.messageId 			= InputRoot.MQMD.CorrelId; 
        ELSE 
            SET refHeaderOut.messageId 			= refHeaderIn.messageId; 
        END IF;
        
        CREATE FIELD refBodyOut.V1_Autenticacion:mjsResValidarTokenOTP;
        DECLARE refFirstTagOut					REFERENCE TO refBodyOut.V1_Autenticacion:mjsResValidarTokenOTP;
        
        --Declarar prefijos de carga útil
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v1 					= V1_Autenticacion;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v11 					= v11Res;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v12 					= v12Res;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v13 					= v13Res;
        SET refFirstTagOut.(XMLNSC.NamespaceDecl)xmlns:v15 					= v15Res;
        
        CREATE FIELD refFirstTagOut.V1_Autenticacion:contextoRespuesta;
        DECLARE refContextoRespuesta 			REFERENCE TO refFirstTagOut.V1_Autenticacion:contextoRespuesta;
        
        CREATE FIELD refContextoRespuesta.v11Res:resultadoTransaccion;
        DECLARE refResultadoTrans				REFERENCE TO refContextoRespuesta.v11Res:resultadoTransaccion;
        
        CREATE FIELD refContextoRespuesta.v11Res:error;
        DECLARE refError						REFERENCE TO refContextoRespuesta.v11Res:error;
        
        CREATE FIELD refFirstTagOut.V1_Autenticacion:seguridadTokenTipo;
        DECLARE refSegTokenTipo					REFERENCE TO refFirstTagOut.V1_Autenticacion:seguridadTokenTipo;
        
        
        --Mapeos de los campos
        SET refResultadoTrans.v12Res:valCaracterAceptacion 			= 'B'; 
        SET refError.v13Res:codMsjRespuesta							= CAST(refDataHeaderIn.codigoError AS CHARACTER);
        SET refError.v13Res:valMsjRespuesta							= CAST(refDataHeaderIn.mensajeError AS CHARACTER);
		SET refSegTokenTipo.v15Res:esTokenAutenticado 				= CAST(UPPER('TRUE') AS BOOLEAN);
		
		IF CONTAINS(FIELDVALUE(refDataIn.tokenExpiracion),UNO_P) THEN
			SET refSegTokenTipo.v15Res:esSiguienteToken					= CAST(UPPER('TRUE') AS BOOLEAN);
		ELSEIF CONTAINS(FIELDVALUE(refDataIn.tokenExpiracion),ZERO) THEN
			SET refSegTokenTipo.v15Res:esSiguienteToken					= CAST(UPPER('FALSE') AS BOOLEAN);
		END IF;
		      			
		--Llamado a la función que setea en el localEnvironment la cola de respuesta
		CALL SetDestinationListHd(refHeaderOut, refLocEnv);
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;