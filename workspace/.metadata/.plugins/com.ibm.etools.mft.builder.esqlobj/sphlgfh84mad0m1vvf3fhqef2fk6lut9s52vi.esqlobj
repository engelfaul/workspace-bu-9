/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		--mantener el CorrelId
		CALL CopyMessageHeaders();		
		
		--Referencia al Header y Body del envolvente
		DECLARE refMsgIn 		REFERENCE TO InputRoot.XMLNSC.*:esbXML;
		DECLARE refHeaderIn 	REFERENCE TO refMsgIn.Header;
		DECLARE refBodyIn		REFERENCE TO refMsgIn.Body;
				
		--Referencia al contenedor de la carga Ãºtil
		DECLARE refEndpointElem	REFERENCE TO refBodyIn;
		MOVE refEndpointElem 	FIRSTCHILD NAMESPACE *;
		
		-- Referencia al Environment
		CREATE FIELD Environment.Variables;
		DECLARE refEnvVar		REFERENCE TO Environment.Variables;
		
		--Transportar el Header de la envoltura esbXML
		SET refEnvVar.Header	= refHeaderIn;
				
		-- Almacenar en Environment para posterior uso en la respuesta del componente
		DECLARE refDataHeaderIn	 	REFERENCE TO refEndpointElem.Request.DataHeader;
		
		SET refEnvVar.NameSpace			= FIELDNAMESPACE(refEndpointElem);
		SET refEnvVar.nombreOperacion	= refDataHeaderIn.nombreOperacion;	
		SET refEnvVar.total			 	= refDataHeaderIn.total;
		SET refEnvVar.idTransaccion		= refDataHeaderIn.idTransaccion;
		
		--Crear mensaje de salida
		CREATE FIELD OutputRoot.XMLNSC;
		DECLARE refMsgOut		REFERENCE TO OutputRoot.XMLNSC;
		
		--Indicar propiedad del Message Set
		SET OutputRoot.Properties.MessageSet = NMessageSet1;
				
		--Armar mensaje de salida sin namespace
		SET refMsgOut			= refBodyIn;
		
		CALL StripNamespaces(refMsgIn);
		CALL RemoveNamespace(refMsgOut, FIELDVALUE(refEnvVar.NameSpace));
				
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
